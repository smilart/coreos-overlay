From ffbf59032c9dff0afc19490f012066d4bbd5a0c3 Mon Sep 17 00:00:00 2001
From: Steve Langasek <steve.langasek@canonical.com>
Date: Fri, 12 Oct 2012 16:48:53 -0700
Subject: [PATCH] Use AC_CANONICAL_HOST, not uname -m, to determine target

The EFI architecture should be set from the standard autoconf macros, not
from uname -m.  Uname -m is wrong not just when cross-building, but also when
running 32-bit userspace on a 64-bit kernel.

Ref: https://bugs.launchpad.net/bugs/1066038
---
 configure.ac |   15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/configure.ac b/configure.ac
index 0d8f0bb..a693d96 100644
--- a/configure.ac
+++ b/configure.ac
@@ -7,6 +7,8 @@ AC_PREREQ(2.60)
 AC_CONFIG_HEADERS(config.h)
 AC_CONFIG_SRCDIR(src/sbsign.c)
 
+AC_CANONICAL_HOST
+
 AM_PROG_AS
 AC_PROG_CC
 AM_PROG_CC_C_O
@@ -64,7 +66,18 @@ PKG_CHECK_MODULES(uuid, uuid,
     AC_MSG_ERROR([libuuid (from the uuid package) is required]))
 
 dnl gnu-efi headers require extra include dirs
-EFI_ARCH=$(uname -m)
+case $host_cpu in
+	x86_64)
+		EFI_ARCH=$host_cpu
+		;;
+	i*86)
+		EFI_ARCH=ia32
+		;;
+	*)
+		AC_MSG_ERROR([unsupported EFI architecture $host_cpu])
+		;;
+esac
+
 EFI_CPPFLAGS="-I/usr/include/efi -I/usr/include/efi/$EFI_ARCH \
  -DEFI_FUNCTION_WRAPPER"
 CPPFLAGS_save="$CPPFLAGS"
-- 
1.7.10.4

