Description: fix calculation of the size of our signature data
 The 'size' field of the certificate table header includes the size of the
 header itself.  When parsing a signed file, we should therefore subtract the
 size of this header from the field representing the size of the pkcs7 data
 packet; otherwise when we detach (and subsequently reattach) a signature,
 we wind up with 8 extra bytes of zeroes at the end each time.  Fixing this
 ensures that detaching and signature and then reattaching it to the file
 gives us back the original file.
Author: Steve Langasek <steve.langasek@canonical.com>
Last-Update: 2013-09-07

Index: sbsigntool-0.6/src/image.c
===================================================================
--- sbsigntool-0.6.orig/src/image.c
+++ sbsigntool-0.6/src/image.c
@@ -285,7 +285,7 @@
 	if (cert_table && cert_table->revision == CERT_TABLE_REVISION &&
 			cert_table->type == CERT_TABLE_TYPE_PKCS &&
 			cert_table->size < size) {
-		image->sigsize = cert_table->size;
+		image->sigsize = cert_table->size - sizeof(*cert_table);
 		image->sigbuf = talloc_memdup(image, cert_table + 1,
 				image->sigsize);
 	}
